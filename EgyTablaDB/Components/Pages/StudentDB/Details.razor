@page "/details"

@using EgyTablaDB.Model
@using Microsoft.EntityFrameworkCore
@inject EgyTablaDB.Data.MyDBContext DB
@inject NavigationManager NavManager
@rendermode InteractiveServer

<h3>Details</h3>

<hr/>
<div>
    @if (student is null)
    {
        <p>Loading......</p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">OM azonosító</dt>
            <dd class="col-sm-10">@student.StudentID</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Név</dt>
            <dd class="col-sm-10">@student.GetFullname()</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Születésnap</dt>
            <dd class="col-sm-10">@student.BirthDay</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Születési hely</dt>
            <dd class="col-sm-10">@student.BirthPlace</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Anyja neve</dt>
            <dd class="col-sm-10">@student.GetFullname2()</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Város</dt>
            <dd class="col-sm-10">@student.City</dd>
        </dl> 

        <a href="@($"editstudent?Id={student.StudentID}")" class="btn btn-success">edit</a>
        <a href="/studentindex " class="btn btn-primary">Back to Student List</a>
       
    }
</div>


@code {
    Student? student;
    [SupplyParameterFromQuery]
    public long id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        student = await DB.Students.FirstOrDefaultAsync(m => m.StudentID == id);
        if (student is null)
        {
            NavManager.NavigateTo("Not found");
        }
    }
}
